worker_processes  1;

events { worker_connections  1024; }

http {
  # Basic security headers (HSTS on HTTPS block below)
  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  # Upstream is the local FastAPI running on the host
  upstream backend_upstream {
    server host.docker.internal:8000;  # macOS/Windows Docker; on Linux replace with host.docker.internal via extra_hosts
  }

  # HTTPS server: serve /auth/* with TLS + HSTS and proxy to backend
  server {
    listen 443 ssl http2;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/dev.crt;
    ssl_certificate_key /etc/nginx/certs/dev.key;

    # HSTS per requirement
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Proxy only /auth/* to backend
    location /auth/ {
      proxy_pass http://backend_upstream/auth/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }

    # Optional: return 404 for anything else (keeps scope tight)
    location / {
      return 404;
    }
  }

  # HTTP server: redirect only /auth/* to HTTPS
  server {
    listen 80;
    server_name localhost;

    location /auth/ {
      return 308 https://$host$request_uri;
    }

    # Everything else: 404 (or you can ignore)
    location / { return 404; }
  }
}
